{"version":3,"sources":["common/styles/Container.module.css","Main/Main.module.scss","Footer/Footer.module.css","Contact/Contact.module.css","Skills/Skills.module.css","Projects/Progects.module.css","Projects/Project/Project.module.css","RemoteWork/RemoteWork.module.css","Skills/Skill/Skill.module.css","Header/Header.module.css","Nav/Nav.module.css","assets/image/myPhoto.jpg","common/components/Title/Title.module.css","Header/Header.js","Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","style","homeSection","blockItems","mainBlockContainer","row","homeText","href","btn","homeImg","imgBox","src","myImg","alt","App","Main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,gC,gBCAxED,EAAOC,QAAU,CAAC,YAAc,0BAA0B,mBAAqB,iCAAiC,IAAM,kBAAkB,WAAa,yBAAyB,SAAW,uBAAuB,IAAM,kBAAkB,QAAU,sBAAsB,OAAS,uB,gBCAjRD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,gBAAkB,gCAAgC,YAAc,4BAA4B,WAAa,2BAA2B,MAAQ,wB,gBCAxMD,EAAOC,QAAU,CAAC,aAAe,8BAA8B,iBAAmB,kCAAkC,MAAQ,uBAAuB,YAAc,6BAA6B,cAAgB,iC,gBCA9MD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,gBAAkB,gCAAgC,MAAQ,sBAAsB,OAAS,yB,gBCArJD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,eAAiB,iCAAiC,MAAQ,0B,gBCAtHD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,+B,gBCA7ID,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,oBAAsB,wCAAwC,MAAQ,0BAA0B,iBAAmB,uC,gBCA3LD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,kBCAtDD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,IAAM,mB,gBCDxBD,EAAOC,QAAU,IAA0B,qC,gBCC3CD,EAAOC,QAAU,CAAC,MAAQ,uB,0KCWXC,I,iCCeAA,MAvBf,WACI,OACI,yBAAKC,UAAS,UAAKC,IAAMC,YAAX,YAA0BD,IAAME,aAC1C,yBAAKH,UAAWC,IAAMG,oBAClB,yBAAKJ,UAAS,UAAKC,IAAMI,IAAX,YAAkBJ,IAAME,aAClC,yBAAKH,UAAWC,IAAMK,UACnB,0CACC,gDACA,kDACA,uBAAGC,KAAK,IAAIP,UAAWC,IAAMO,KAA7B,iBACA,uBAAGD,KAAK,IAAIP,UAAWC,IAAMO,KAA7B,cAEJ,yBAAKR,UAAWC,IAAMQ,SAClB,yBAAKT,UAAWC,IAAMS,QAClB,yBAAKC,IAAKC,IAAOC,IAAI,gB,8CCMlCC,MAdf,WACI,OACI,yBAAKd,UAAU,OAEX,kBAACe,EAAD,QCFQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.908d5f2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__20Sed\",\"allButtons\":\"Container_allButtons__1Rw5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homeSection\":\"Main_homeSection__T8Pik\",\"mainBlockContainer\":\"Main_mainBlockContainer__1x2Eq\",\"row\":\"Main_row___Co84\",\"blockItems\":\"Main_blockItems__vu167\",\"homeText\":\"Main_homeText__2Xxzb\",\"btn\":\"Main_btn__C0iRP\",\"homeImg\":\"Main_homeImg__1FmyG\",\"imgBox\":\"Main_imgBox__cGgZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerBlock\":\"Footer_footerBlock__3B5eQ\",\"footerContainer\":\"Footer_footerContainer__j6Sva\",\"footerItems\":\"Footer_footerItems__3QP6S\",\"footerItem\":\"Footer_footerItem__3QebT\",\"title\":\"Footer_title__EZvG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactBlock\":\"Contact_contactBlock__ySG9U\",\"contactContainer\":\"Contact_contactContainer__1qppy\",\"title\":\"Contact_title__28Z8P\",\"contactForm\":\"Contact_contactForm__Ol6MG\",\"contactButton\":\"Contact_contactButton__DcvGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skillsBlock\":\"Skills_skillsBlock__UqkFn\",\"skillsContainer\":\"Skills_skillsContainer__1sB1M\",\"title\":\"Skills_title__3haCh\",\"skills\":\"Skills_skills__3m-Jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"worksBlock\":\"Progects_worksBlock__1CbM0\",\"worksContainer\":\"Progects_worksContainer__1XTlw\",\"works\":\"Progects_works__bSpvP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"work\":\"Project_work__1CCcA\",\"workImg\":\"Project_workImg__2SwJN\",\"projectTitle\":\"Project_projectTitle__1mRlW\",\"description\":\"Project_description__2YVqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remoteWorkBlock\":\"RemoteWork_remoteWorkBlock__jwA5p\",\"remoteWorkContainer\":\"RemoteWork_remoteWorkContainer__2bu-g\",\"title\":\"RemoteWork_title__1X0W9\",\"remoteWorkButton\":\"RemoteWork_remoteWorkButton__3Di8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skill\":\"Skill_skill__18fTc\",\"icon\":\"Skill_icon__fJEnJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Sx1O5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3-flp\"};","module.exports = __webpack_public_path__ + \"static/media/myPhoto.e2cf3ad0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2U29o\"};","import React from 'react';\r\nimport style from'./Header.module.css';\r\nimport Nav from \"../Nav/Nav\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={style.header}>\r\n            <Nav />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport style from './Main.module.scss';\r\nimport myImg from './../assets/image/myPhoto.jpg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={`${style.homeSection} ${style.blockItems}`}>\r\n            <div className={style.mainBlockContainer}>\r\n                <div className={`${style.row} ${style.blockItems}`}>\r\n                    <div className={style.homeText}>\r\n                       <p> Hello, I'm</p>\r\n                        <h1>Tanya Kravchenko</h1>\r\n                        <h2>Frontend Developer</h2>\r\n                        <a href='#' className={style.btn}>more about me</a>\r\n                        <a href='#' className={style.btn}>portfolio</a>\r\n                    </div>\r\n                    <div className={style.homeImg}>\r\n                        <div className={style.imgBox}>\r\n                            <img src={myImg} alt=\"myImg\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Main from \"./Main/Main\";\nimport Skills from \"./Skills/Skills\";\nimport Project from \"./Projects/Projects\";\nimport RemoteWork from \"./RemoteWork/RemoteWork\";\nimport Contact from \"./Contact/Contact\";\nimport Footer from \"./Footer/Footer\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            {/*<Header/>*/}\n            <Main/>\n            {/*<Skills/>*/}\n            {/*<Project/>*/}\n            {/*<RemoteWork/>*/}\n            {/*<Contact/>*/}\n            {/*<Footer/>*/}\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}